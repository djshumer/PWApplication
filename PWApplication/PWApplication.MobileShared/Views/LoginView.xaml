<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:d="http://xamarin.com/schemas/2014/forms/design"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:behaviors="clr-namespace:PWApplication.MobileShared.Behaviors;assembly=PWApplication.MobileShared"
             xmlns:converters="clr-namespace:PWApplication.MobileShared.Converters;assembly=PWApplication.MobileShared"
             xmlns:customControls="clr-namespace:PWApplication.MobileShared.CustomControls;assembly=PWApplication.MobileShared"
             xmlns:animations="clr-namespace:PWApplication.MobileShared.Animations"
             mc:Ignorable="d"
             x:Class="PWApplication.MobileShared.Views.LoginView"
             BindingContext="{Binding LoginViewModel, Source={StaticResource ViewModelLocator}}"
             BackgroundColor="{StaticResource BackgroundColor}"
             NavigationPage.HasNavigationBar="False"
             NavigationPage.HasBackButton="False">
    <ContentPage.Resources>
        <converters:FirstValidationErrorConverter x:Key="FirstValidationErrorConverter" />
        <converters:WebNavigatingEventArgsConverter x:Key="WebNavigatingEventArgsConverter" />

        <Style x:Key="TitleLabelStyle"
                TargetType="{x:Type Label}">
            <Setter Property="FontAttributes"
                    Value="Bold" />
            <Setter Property="FontSize"
                    Value="{StaticResource MediumSize}" />
            <Setter Property="HorizontalOptions"
                    Value="Center" />
            <Setter Property="Margin"
                    Value="0, 12" />
        </Style>

        <Style x:Key="HeaderLabelStyle"
                TargetType="{x:Type Label}">
            <Setter Property="FontSize"
                    Value="{StaticResource LittleSize}" />
            <Setter Property="TextColor"
                    Value="{StaticResource GreenColor}" />
            <Setter Property="HorizontalOptions"
                    Value="Start" />
        </Style>

        <Style x:Key="LoginButtonStyle"
                TargetType="{x:Type Label}">
            <Setter Property="TextColor"
                    Value="{StaticResource WhiteColor}" />
            <Setter Property="HorizontalOptions"
                    Value="Center" />
            <Setter Property="VerticalOptions"
                    Value="Center" />
        </Style>

        <Style x:Key="LoginPanelStyle"
                TargetType="{x:Type Grid}">
            <Setter Property="HeightRequest"
                    Value="60" />
            <Setter Property="BackgroundColor"
                    Value="{StaticResource LightGreenColor}" />
            <Setter Property="HorizontalOptions"
                    Value="FillAndExpand" />
            <Setter Property="VerticalOptions"
                    Value="FillAndExpand" />
        </Style>

        <Style x:Key="RegisterPanelStyle"
                TargetType="{x:Type Grid}"
                BasedOn="{StaticResource LoginPanelStyle}">
            <Setter Property="BackgroundColor"
                    Value="{StaticResource GreenColor}" />
        </Style>
        <animations:StoryBoard
              x:Key="LoginAnimation"
              Target="{x:Reference LoginPanel}">
            <animations:FadeInAnimation
                    Direction="Up"
                    Duration="1500" />
        </animations:StoryBoard>
    </ContentPage.Resources>
    <ContentPage.Content>
        <Grid BackgroundColor="{StaticResource BackgroundColor}">
            <!-- MOCK AUTH -->
            <Grid
            x:Name="LoginPanel"
            IsVisible="{Binding IsMock}"
            d:IsVisible="True"
            Padding="0"
            ColumnSpacing="0"
            RowSpacing="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="60" />
                </Grid.RowDefinitions>
                <!-- LOGIN / REGISTER -->
                <Grid   
                Grid.Row="0"
                Margin="48, 24">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <StackLayout  
                  Grid.Column="0"
                  Orientation="Horizontal"
                  HorizontalOptions="Center">
                        <Label     
                        Text="["
                        TextColor="{StaticResource LightGreenColor}"/>
                        <Label
                        Text="LOGIN"
                        FontAttributes="Bold"/>
                        <Label
                        Text="]"
                        TextColor="{StaticResource LightGreenColor}"/>
                    </StackLayout>
                    <Grid
                  Grid.Column="1"
                  HorizontalOptions="Center">
                        <Label
                        Text="REGISTER"
                        TextColor="Gray"/>
                    </Grid>
                </Grid>
                <!-- INFO -->
                <Label
              Grid.Row="1"
              Text="ARE YOU REGISTERED?"
              Style="{StaticResource TitleLabelStyle}"/>
                <!-- LOGIN FORM -->
                <StackLayout   
                Grid.Row="2"
                Margin="24">
                    <Label
                  Text="Email"
                  Style="{StaticResource HeaderLabelStyle}" />
                    <Entry Text="{Binding UserName.Value, Mode=TwoWay}" Style="{StaticResource EntryStyle}">
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidateUserNameCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger 
							TargetType="Entry"
							Binding="{Binding UserName.IsValid}"
							Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding UserName.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					    Style="{StaticResource ValidationErrorLabelStyle}" />
                    <Label Text="Password" Style="{StaticResource HeaderLabelStyle}"/>
                    <Entry IsPassword="True"
                        Text="{Binding Password.Value, Mode=TwoWay}" Style="{StaticResource EntryStyle}">
                        <Entry.Behaviors>
                            <behaviors:EventToCommandBehavior
							EventName="TextChanged"
							Command="{Binding ValidatePasswordCommand}" />
                        </Entry.Behaviors>
                        <Entry.Triggers>
                            <DataTrigger 
							TargetType="Entry"
							Binding="{Binding Password.IsValid}"
							Value="False">
                                <Setter Property="behaviors:LineColorBehavior.LineColor" Value="{StaticResource ErrorColor}" />
                            </DataTrigger>
                        </Entry.Triggers>
                    </Entry>
                    <Label Text="{Binding Password.Errors, Converter={StaticResource FirstValidationErrorConverter}}"
					Style="{StaticResource ValidationErrorLabelStyle}" />
                </StackLayout>
                <!-- LOGIN BUTTON -->
                <Grid
                BackgroundColor="{StaticResource LightGreenColor}"
                Grid.Row="3"
                Padding="0"
                ColumnSpacing="0"
                RowSpacing="0">
                    <Label
                  Text="[ LOGIN ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer
                        Command="{Binding MockSignInCommand}"
                        NumberOfTapsRequired="1" />
                    </Grid.GestureRecognizers>
                </Grid>
            </Grid>
            <!-- AUTH -->
            <Grid
              ColumnSpacing="0"
              RowSpacing="0"
              IsVisible="{Binding IsMock, Converter={StaticResource InverseBoolConverter}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="60" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition />
                </Grid.ColumnDefinitions>
                <!-- BANNER -->
                <Image
                    x:Name="Banner"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="2"
                    Aspect="AspectFill">
                    <Image.Source>
                        <OnPlatform x:TypeArguments="ImageSource">
                            <On Platform="iOS, Android" Value="banner.png" />
                            <On Platform="UWP, WinRT, WinPhone" Value="Assets\banner.png" />
                        </OnPlatform>
                    </Image.Source>
                </Image>
                <Grid
                Grid.Row="0"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                BackgroundColor="{StaticResource BlackColor}"
                Opacity="0.5"/>
                <!-- LOG IN BUTTON -->
                <Grid
                Grid.Column="0"
                Grid.Row="1"
                Style="{StaticResource LoginPanelStyle}">
                    <Label
                  Text="[ LOGIN ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer
                        Command="{Binding SignInCommand}"
                        NumberOfTapsRequired="1" />
                    </Grid.GestureRecognizers>
                </Grid>
                <!-- REGISTER BUTTON -->
                <Grid
                Grid.Column="1"
                Grid.Row="1"
                Style="{StaticResource RegisterPanelStyle}">
                    <Label
                  Text="[ REGISTER ]"
                  Style="{StaticResource LoginButtonStyle}"/>
                    <Grid.GestureRecognizers>
                        <TapGestureRecognizer
                        Command="{Binding RegisterCommand}"
                        NumberOfTapsRequired="1" />
                    </Grid.GestureRecognizers>
                </Grid>
                <!-- WEBVIEW -->
                <AbsoluteLayout
                Grid.Column="0"
                Grid.ColumnSpan="2"
                Grid.Row="0"
                Grid.RowSpan="2"
                IsVisible="{Binding IsLogin, Mode=OneWay}">
                    <customControls:AuthenticatingWebView x:Name="AuthorWebView"
                    Source="{Binding LoginUrl, Mode=TwoWay}"
                    AbsoluteLayout.LayoutBounds="0, 0, 1, 1"
                    AbsoluteLayout.LayoutFlags="All" >
                        <customControls:AuthenticatingWebView.Behaviors>
                            <behaviors:EventToCommandBehavior 
                            EventName="Navigating"
                            EventArgsConverter="{StaticResource WebNavigatingEventArgsConverter}"
                            Command="{Binding NavigateCommand}" />
                        </customControls:AuthenticatingWebView.Behaviors>
                    </customControls:AuthenticatingWebView>
                </AbsoluteLayout>
            </Grid>
            <!-- INDICATOR -->
            <ActivityIndicator      
          Color="{StaticResource LightGreenColor}"
          IsRunning="{Binding IsBusy}"
          IsVisible="{Binding IsBusy}"
          VerticalOptions="Center"
          HorizontalOptions="Center">
                <ActivityIndicator.WidthRequest>
                    <OnPlatform x:TypeArguments="x:Double">
                        <On Platform="iOS, Android" Value="100" />
                    </OnPlatform>
                </ActivityIndicator.WidthRequest>
            </ActivityIndicator>
        </Grid>

    </ContentPage.Content>
</ContentPage>